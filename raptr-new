#!/usr/bin/env bash
set -e
script_name="$(basename "$BASH_SOURCE")"
script_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

while [[ "$#" > 1 ]]; do
  case "$1" in
    -a|--archives) archives="$2"; shift 2 ;;
    -s|--sections) sections="$2"; shift 2 ;;
    -c|--cpus) cpus="$2"; shift 2 ;;
    *);;
  esac
done

[ -z "$archives" ] && echo "Missing required list of archives." && exit 1
[ -z "$sections" ] && echo "Missing required list of sections." && exit 1
[ -z "$cpus" ] && cpus="amd64 i386 source"

origin="none" # TODO
label="none" # TODO
description="none" # TODO

echo "Initializing apt repository at \"$(pwd)\""
mkdir -p conf db
echo "$archives" > conf/archives

cat > conf/apt-generate.conf <<-EOF
	Dir {
	    ArchiveDir "$(pwd)";
	    CacheDir "$(pwd)/db";
	};
	Default {
	    Packages::Compress ". gzip bzip2";
	    Contents::Compress ". gzip bzip2";
	    Sources::Compress ". gzip bzip2";
	};
	TreeDefault {
	    Directory "pool/\$(SECTION)";
	    SrcDirectory "pool/\$(SECTION)";
	};
EOF

for archive in $archives; do
  echo "Generating release-specific configuration for \"$archive\"."

  cat >> conf/apt-generate.conf <<-EOF
	Tree "dists/$archive" {
	    Sections "$sections";
	    Architectures "$cpus";
	};
EOF
  cat > "conf/apt-$archive-release.conf" <<-EOF
	APT::FTPArchive::Release::Archive "$archive";
	APT::FTPArchive::Release::Components "$sections";
	APT::FTPArchive::Release::Origin "$origin";
	APT::FTPArchive::Release::Label "$label";
	APT::FTPArchive::Release::Architectures "$cpus";
	APT::FTPArchive::Release::Description "$description";
EOF
done

for archive in $archives; do
  echo "Creating sections \"$sections\" for archive \"$archive\"."
  for section in $sections; do
    for cpu in $cpus; do
      parsed_cpu="binary-$cpu"
      [ "$cpu" == "source" ] && parsed_cpu="$cpu"
      mkdir -p "dists/$archive/$section/$parsed_cpu"
      cat > "dists/$archive/$section/$parsed_cpu/Release" <<-EOF
	Archive: $archive
	Component: $section
	Origin: $origin
	Label: $label
	Architecture: $cpu
EOF
    done
  done
done

echo "Creating directory pools for \"$sections\"."
for section in $sections; do
  mkdir -p "pool/$section"
done

exit 0
